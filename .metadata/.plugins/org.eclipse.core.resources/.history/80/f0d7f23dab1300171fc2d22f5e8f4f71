package com.test.utils;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class MySaxParser extends DefaultHandler {
	String absolutePathToXml = "";
	int Count = 1;
	String ClassName = "Class";
	String MethodName = "Method";
	String AttributeName = "Status";
	String skip, ignore, pass, fail, total;
	List<List<String>> listOfLists = new ArrayList<List<String>>();
	List<String> list = new ArrayList<String>();

	public MySaxParser(File xml) {
		absolutePathToXml = xml.getAbsolutePath();
	}

	/**
	 * Parses an XML file into memory
	 */
	public void parseXml() {
		SAXParserFactory factory = SAXParserFactory.newInstance();
		try {
			SAXParser parser = factory.newSAXParser();
			parser.parse(absolutePathToXml, this);
		} catch (ParserConfigurationException e) {
			System.out.println("ParserConfigurationException: ");
			e.printStackTrace();
		} catch (SAXException e) {
			System.out.println("SAXException: ");
			e.printStackTrace();
		} catch (IOException e) {
			System.out.println("IOException: ");
			e.printStackTrace();
		}
	}

	/**
	 * Event: Parser starts reading an element
	 */
	@Override
	public void startElement(String s1, String s2, String elementName, Attributes attributes) throws SAXException {
		// print an element's name
		// print an element's name
		if (elementName.equals("testng-results")) {
			System.out.println("element: " + elementName);

			// print all attributes for this element
			for (int i = 0; i < attributes.getLength(); i++) {
				if (attributes.getQName(i).equals("skipped"))
					skip = attributes.getValue(i);
				else if (attributes.getQName(i).equals("passed"))
					pass = attributes.getValue(i);
				else if (attributes.getQName(i).equals("failed"))
					fail = attributes.getValue(i);
				else if (attributes.getQName(i).equals("ignored"))
					ignore = attributes.getValue(i);
				else if (attributes.getQName(i).equals("total"))
					total = attributes.getValue(i);
			}
		}
		if (elementName.equals("test-method")) {
			for (int i = 0; i < attributes.getLength(); i++) {
				if (attributes.getQName(i).equals("name"))
					list.add(attributes.getValue(i));
				else if (attributes.getQName(i).equals("status"))
					list.add(attributes.getValue(i));
			}
			listOfLists.add(list);
			list.clear();
		}
	}

	public List<List<String>> values() {

		return listOfLists;

	}
	public String[] Counts()
	{
		return new String[] {pass, fail, skip, ignore}
	}

}
