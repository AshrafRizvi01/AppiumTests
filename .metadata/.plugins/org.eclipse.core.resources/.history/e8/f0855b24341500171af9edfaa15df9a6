package com.test.utils;

import java.util.Date;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

/**
 * Provides email mechanism to send the report by email to the team members
 * 
 * @author Ashraf Iftekhar, Mar 30, 2017
 *
 */
public class EmailReport {

	/**
	 * Sends Email with a report attached to it.
	 * 
	 * @param EmailIds
	 *            String[]
	 * @param SenderEmail
	 *            String
	 * @param reportName
	 *            String
	 */
	public static void SendReportAsEmail(String[] EmailIds, String SenderEmail, String SenderPass, String reportName) {
		// Recipient's email ID needs to be mentioned.
		String[] to = EmailIds;

		// Sender's email ID needs to be mentioned
		String from = SenderEmail;

		 Properties props = new Properties();    
         props.put("mail.smtp.host", "smtp.gmail.com");    
         props.put("mail.smtp.socketFactory.port", "465");    
         props.put("mail.smtp.socketFactory.class",    
                   "javax.net.ssl.SSLSocketFactory");    
         props.put("mail.smtp.auth", "true");    
         props.put("mail.smtp.port", "465");    
         //get Session   
         Session session = Session.getDefaultInstance(props,    
          new javax.mail.Authenticator() {    
          protected PasswordAuthentication getPasswordAuthentication() {    
          return new PasswordAuthentication(from,SenderPass);  
          }    
         });  

			// Create a default MimeMessage object.
			MimeMessage message = new MimeMessage(session);

			// Set From: header field of the header.
			message.setFrom(new InternetAddress(from));

			// Set To: header field of the header.
			for (int i = 0; i < to.length; i++) {
				message.addRecipient(Message.RecipientType.TO, new InternetAddress(to[i]));
			}
			Date dt = new Date();
			// Set Subject: header field
			message.setSubject(reportName + "|" + "Test Completed at " + dt.toString());

			BodyPart messageBodyPart = new MimeBodyPart();
			// Now set the actual message
			message.setText("Please find the " + reportName + "\n" + "Kindly revert back to QA if you have any queries."
					+ "\n" + "Thank You" + "\n" + "QA Department MM");

			Multipart multipart = new MimeMultipart();
			// Add the file
			// Set text message part
			multipart.addBodyPart(messageBodyPart);

			// Part two is attachment
			messageBodyPart = new MimeBodyPart();
			String filename = System.getProperty("user.dir") + "/" + reportName + ".html";
			DataSource source = new FileDataSource(filename);
			messageBodyPart.setDataHandler(new DataHandler(source));
			messageBodyPart.setFileName(filename);
			multipart.addBodyPart(messageBodyPart);
			// Send message
			Transport.send(message);
			System.out.println("Sent message successfully....");
		} catch (MessagingException mex) {
			mex.printStackTrace();
		}
	}}
