package com.test.utils;

import java.io.File;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import org.testng.TestNGException;
import org.testng.xml.XMLParser;
import org.w3c.dom.Element;

public class MySaxParser {
	String absolutePathToXml = "";
	int Count = 1;
	String ClassName = "Class";
	String MethodName = "Method";
	String AttributeName = "Status";
	String skip, ignore, pass, fail, total;
	List<List<String>> listOfLists = new ArrayList<List<String>>();
	List<String> list = new ArrayList<String>();

	public MySaxParser(File xml) {
		absolutePathToXml = xml.getAbsolutePath();
	}

	/**
	 * Parses an XML file into memory
	 */
	public void parseXml() {
		XMLParser<Element> parser = new XMLParser<Element>() {
			Element[] element;

			@Override
			public Element parse(String filePath, InputStream is, boolean loadClasses) throws TestNGException {
				// TODO Auto-generated method stub
				return null;
			}
		};

	}

	/**
	 * Event: Parser starts reading an element
	 */
	// @Override
	// public void startElement(String s1, String s2, String elementName,
	// Attributes attributes) throws SAXException {
	//
	// // print an element's name
	// if (elementName.equals("testng-results")) {
	//
	// System.out.println("element: " + elementName);
	//
	// // print all attributes for this element
	// for (int i = 0; i < attributes.getLength(); i++) {
	// System.out.println(attributes.getLength());
	// if (attributes.getQName(i).equals("skipped"))
	// skip = attributes.getValue(i);
	// else if (attributes.getQName(i).equals("passed"))
	// pass = attributes.getValue(i);
	// else if (attributes.getQName(i).equals("failed"))
	// fail = attributes.getValue(i);
	// else if (attributes.getQName(i).equals("ignored"))
	// ignore = attributes.getValue(i);
	// else if (attributes.getQName(i).equals("total"))
	// total = attributes.getValue(i);
	// }
	// } else if (elementName.equals("test-method")) {
	// for (int i = 0; i < attributes.getLength(); i++) {
	// if (attributes.getQName(i).equals("name"))
	// list.add(attributes.getValue(i));
	// else if (attributes.getQName(i).equals("status"))
	// list.add(attributes.getValue(i));
	// System.out.println(attributes.getValue(i));
	// }
	// listOfLists.add(list);
	// list.clear();
	// }
	// }

	public List<List<String>> values() {
		return listOfLists;
	}

	public String[] Counts() {
		return new String[] { pass, fail, skip, ignore, total };
	}

}
